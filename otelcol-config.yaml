extensions:
  health_check:
   endpoint: "0.0.0.0:13133"
  pprof:
    endpoint: 0.0.0.0:1888
  zpages:
    endpoint: 0.0.0.0:55679
  basicauth/grafana_cloud:
    client_auth: 
      username: "830567"
      password: "${env:GRAFANA_CLOUD}"  

connectors:
  grafanacloud:
    host_identifiers: ["host.name"]
    metrics_flush_interval: 60s    

receivers:
  otlp:
    protocols:
      http: 
       endpoint: 0.0.0.0:4318
  hostmetrics:
    collection_interval: 10s
    scrapers:
      paging:
        metrics:
          system.paging.utilization:
            enabled: true
      load:
        cpu_average: true
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      memory:
      network:
        metrics:
          system.network.connections:
            enabled: true
      process:

processors:
  batch:
    timeout: 10s
    send_batch_max_size: 1000
    send_batch_size: 100
  resourcedetection:
    detectors: [ecs, ec2, system, env]
  attributes:
    actions:
      - action: insert
        key: loki.attribute.labels
        value: event.domain
  resource:
    attributes:
      - action: insert
        key: loki.resource.labels
        value: service.name
      - action: insert
        key: loki.format
        value: logfmt

exporters:
  debug:
    verbosity: detailed
  otlphttp/grafana_cloud:
    endpoint: https://otlp-gateway-prod-us-east-0.grafana.net/otlp
    auth:
      authenticator: basicauth/grafana_cloud
    encoding: json

  # prometheusremotewrite:
  #   endpoint: "https://prometheus-prod-36-prod-us-west-0.grafana.net/api/prom/push"
  #   auth:
  #     authenticator: basicauth/prometheus
  #   remote_write_queue:
  #     enabled: false // its sending emtrics, lets test the otlp/v1/metrics now along with logs

service:
  extensions: [health_check, pprof, zpages, basicauth/grafana_cloud, basicauth/otlp, basicauth/prometheus]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug, otlphttp/grafana_cloud]
    metrics:
      receivers: [otlp, hostmetrics]
      processors: [resourcedetection, batch]
      exporters: [otlphttp/grafana_cloud]
    logs:
      receivers: [otlp, filelog, otlpjsonfile]
      processors: [batch]
      exporters: [otlphttp/loki, otlphttp/grafana_cloud, debug]
